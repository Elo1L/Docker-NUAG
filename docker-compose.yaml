services:
  vote:
    build: ./vote/
    ports:
      - "5000:5000"
    networks:
      - front-tier
      - back-tier
    depends_on:
      - worker

  result:
    build: ./result/
    ports:
      - "4000:4000"
    networks:
      - front-tier
      - back-tier
    depends_on:
      - db
  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/tmp/nginx.conf
    environment:
      - VOTE_SERVER_ADDR=vote:5000
    command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    ports:
      - "8000:8000"
    depends_on:
      - vote
    networks:
      - front-tier

  seed-data:
    build: ./seed-data/
    networks:
      - front-tier
    depends_on:
      - nginx
  worker:
    build: ./worker/
    networks:
      - back-tier
    depends_on:
      - db
  redis:
    image: "redis:alpine"
    networks:
      - back-tier
    volumes:
      - ./healthchecks:/healthchecks # Mount healthchecks directory
    healthcheck:
      test: ["CMD", "/healthchecks/redis.sh"] # Use the health check script
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: "postgres:alpine"
    volumes:
      - postgres-db-data:/var/lib/postgresql/data
      - ./healthchecks:/healthchecks
    environment:
      POSTGRES_PASSWORD: postgres
    networks:
      - back-tier
    healthcheck:
      test: ["CMD", "/healthchecks/postgres.sh"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  front-tier:
    name: front-tier
  back-tier:
    name: back-tier

volumes:
  postgresqldata:
  postgres-db-data:
